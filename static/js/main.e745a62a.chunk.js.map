{"version":3,"sources":["web3.js","lottery.js","App.js","reportWebVitals.js","index.js"],"names":["web3","Web3","window","currentProvider","eth","Contract","App","state","manager","players","balance","value","message","onEnter","event","a","preventDefault","getAccounts","accounts","setState","lottery","methods","enter","send","from","utils","toWei","onClick","pickWinner","call","getPlayers","getBalance","options","address","this","personal","unlockAccount","then","console","log","length","fromWei","onSubmit","onChange","target","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e745a62a.chunk.js","sourcesContent":["import Web3 from 'web3';\r\n\r\nconst web3 = new Web3(window.web3.currentProvider);//copyof web3 ie coming frm metamask library\r\n//currentProvider is preconfigured to rinkeby Tnw and has access to all of our\r\n//account addresses and public keys and private keys all thing we possibly want\r\n\r\nexport default web3;","import web3 from './web3';\r\n\r\nconst address = \"0xF2EDAdd5a75A66cE0491426377B32cE195836669\";\r\n\r\nconst abi = [\r\n    {\r\n        \"constant\":true,\r\n        \"inputs\":[],\r\n        \"name\":\"manager\",\r\n        \"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\r\n        \"payable\":false,\r\n        \"stateMutability\":\"view\",\r\n        \"type\":\"function\"\r\n    },\r\n    {\r\n        \"constant\":false,\r\n        \"inputs\":[],\r\n        \"name\":\"pickWinner\",\r\n        \"outputs\":[],\r\n        \"payable\":false,\r\n        \"stateMutability\":\"nonpayable\",\r\n        \"type\":\"function\"\r\n    },\r\n    {\r\n        \"constant\":true,\r\n        \"inputs\":[],\r\n        \"name\":\"getPlayers\",\r\n        \"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\r\n        \"payable\":false,\r\n        \"stateMutability\":\"view\",\r\n        \"type\":\"function\"\r\n    },\r\n    {\r\n        \"constant\":false,\r\n        \"inputs\":[],\r\n        \"name\":\"enter\",\r\n        \"outputs\":[],\r\n        \"payable\":true,\r\n        \"stateMutability\":\"payable\",\r\n        \"type\":\"function\"\r\n    },\r\n    {\r\n        \"constant\":true,\r\n        \"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\r\n        \"name\":\"players\",\r\n        \"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\r\n        \"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"\r\n    },\r\n    {\r\n        \"inputs\":[],\r\n        \"payable\":false,\r\n        \"stateMutability\":\"nonpayable\",\r\n        \"type\":\"constructor\"\r\n    }\r\n];\r\n\r\n//portal or access to the contract on webpage side\r\nexport default new web3.eth.Contract(abi, address);","\nimport lottery from './lottery'; \nimport { Component } from 'react';\nimport web3 from './web3';\n\n\nclass App extends Component{\n  \n  // constructor(props){\n  //   super(props);\n\n  //   this.state = {manager:''}; \n  // }\n\n  state = {\n    manager:'',\n    players: [],\n    balance:'',\n    value:'',\n    message:''\n\n  };//this code is 100% equivalent to the code above on line 10 constr.\n\n  async componentDidMount(){\n\n    const manager = await lottery.methods.manager().call();\n\n    const players = await lottery.methods.getPlayers().call();\n\n    const balance = await web3.eth.getBalance(lottery.options.address);//balance of the contract\n\n\n    this.setState({manager,players, balance});\n\n    web3.eth.personal.unlockAccount(\"0x63E7F4b5841A34D55185e2658f7E27ea9cCA48df\", \"Paas@2910\", 600)\n      .then(console.log('Account unlocked!'));\n  }\n \n  onEnter = async event => {\n\n    event.preventDefault();\n\n    const accounts = await web3.eth.getAccounts();\n\n    this.setState({ message: 'Waiting on the transaction success...'});\n\n    //this takes 15 to 20 sec to get processed\n    //error in this 3 lines\n    await lottery.methods.enter().send({\n        from: accounts[0],\n        value: web3.utils.toWei(this.state.value, 'ether')\n    });\n\n    this.setState({message: 'You have been Entered!'});\n  };\n  \n  onClick = async () =>{\n\n    const accounts = await web3.eth.getAccounts();\n\n    this.setState({message: 'Picking a Winner!'});\n\n    //error in this 3 lines\n    await lottery.methods.pickWinner().send({\n      from: accounts[0]\n    });\n\n    this.setState({message: 'The Winner is: '});\n  }\n\n  render(){\n    return (\n      <div>\n        <h2>Lottery Smart Contract</h2>\n        <p>\n          This Contract is Managed By {this.state.manager}.\n        </p>\n        <p>\n          There are currently {this.state.players.length} people entered,\n          competing to win {web3.utils.fromWei(this.state.balance,'ether')} Ether!\n        </p>\n\n        <hr/>\n\n        \n\n        <form onSubmit={this.onEnter}>\n        <h4>Try Your Luck!!!</h4>\n        <div>\n          <label>Amount of Ether to Enter: </label>\n          <input value={this.state.value} onChange={event => this.setState({ value: event.target.value})}/ >\n\n          \n\n          <button>Enter</button>\n\n        </div>\n        </form>\n\n        <hr/>\n\n        <h4>Ready to Pick a Winner?</h4>\n        <button onClick = {this.onClick}>Pick A Winner</button>\n\n        <hr/>\n\n        <h1>{this.state.message}</h1>\n        \n      </div>\n    );\n  };\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}